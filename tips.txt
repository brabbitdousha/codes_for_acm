向上取整数
(x+b[1]-1)/b[1]
 priority_queue<int> xxx 大根堆

priority_queue<int, vector<int>, greater<int>> xxxx 小根堆
  
if(a[i]==a[i%n+1])//这个可以让i=n的时候对应1.如果下标从0开始就是a[(i + 1) % n]

memset(dis, 32, (n + 1) * 8);// dis是longlong的时候让他尽可能大

数组去重
 for(int i = 1; i <= n; i++)
        {
            cin>>a[i]>>b[i];
            d[++len] = a[i];
            d[++len] = b[i];
        }
        sort(d+1,d+1+len);
        len = unique(d+1,d+1+len)-d-1;

   const ll INF=1e18;  fill(dis, dis+MaxN, INF);这样搞好一点。。
我的for 居然出了好大的问题。。。
printf("%d\n",(int)(dis[k]+0.5));// rounded to the nearest minute

codeforces上面，，我用了 
int to=G[0][i];
printf("1 %d %d\n",G[0][i],baoliu); 结果baoliu变成0了
把 G[0][i]改成to就过了，，额。

我也吐了 node里面定义的int x y
int nx=fa[ex][ey].x;
		int ny=fa[ex][ey].y;
		ex=nx;
		ey=ny;
我要先这样，不然值会变
double N=8.0; int i=2; 
		int num=(int)ceil(log(N)/log(i*1.0));
		cout<<num;
这个可以算幂的大小