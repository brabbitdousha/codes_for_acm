最小生成树 k
#include<bits/stdc++.h>
using namespace std;
int read()
{
	int x=0;int f=1;char ch=getchar();
	while(ch>'9'||ch<'0'){if(ch=='-'){f=-1;}ch=getchar();}
	while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}
	return x*f;
}
struct hh
{
	int a,b,c;
}e[200100];
int n,m;
int f[200000];
long long int sum=0;
int cmp(hh x,hh y)
{
	return x.c<y.c;
}
int find1(int x)
{
	if(f[x]==x) return x;
	f[x]=find1(f[x]);return f[x];
}
int merge(int x,int y)
{
	int t1=find1(x);
	int t2=find1(y);
	if(t1!=t2)
	{
		f[t1]=t2;return 1;
	}
	return 0;
}
int main()
{
	n=read();
	m=read();
	for(int i=0;i<=n;i++)
	f[i]=i;
	for(int i=1;i<=m;i++)
	{
		e[i].a=read();
		e[i].b=read();
		e[i].c=read(); 
    }int ct=0;
    sort(e+1,e+1+m,cmp);
    for(int i=1;i<=m;i++)
    {
    	if(find1(e[i].a)!=find1(e[i].b))
    	{
    		if(merge(e[i].a,e[i].b))
    		{
    			sum+=e[i].c;
    			ct++;
    		}
    	}
    	if(ct==n-1) break;
    }
    int x=find1(1);
    for(int i=2;i<=n;i++)
    {
    	if(x!=find1(i)) {cout<<"orz"; return 0;}
    }
    cout<<sum;
    return 0;
}